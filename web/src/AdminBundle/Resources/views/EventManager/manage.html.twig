{% extends 'AdminBundle::base.html.twig' %}
{% block title %}
    <title>Propelrr Log-in System| Manage Events</title>
{% endblock %}

{% block css %}
    <style>
    .select2-results__option[aria-selected=true] {
        display: none;
    }
    </style>
{% endblock %}

{% block body %}
    <section id="main-container">
        <section id="main-wrapper">
            <div class="container-fluid">
                <div class="row">
                    <div class="page-content">
                        <div class="col-md-12 light-blue darken-1 heading z-depth-1">
                            <div class="responsive-nav"><a class="btn-flat"><i
                                            class="material-icons res-menu">reorder</i></a></div>
                            <div class="top-nav-vl">
                                <h3>Events List</h3>
                                <a class='dropdown-button btn orange btn-select1' href='#' data-activates='dropdown2'>Category</a>
                                <a class="btn amber btn-add btn-open-create-modal  btn-select1" style="color: white; margin-right: 5px;">Create Event</a>
                            </div>
                        </div>

                        <div class = "top-nav">
                            <!-- Dropdown Structure -->
                            <ul id='dropdown2' class='dropdown-content dd1' style = "z-index: 9999;">
                                <li><a href="#!" id="allbtn">All</a></li>
                                <li class="divider"></li>
                                {#<li><a href="#!" id="holidaybtn">Holiday</a></li>#}
                                {#<li class="divider"></li>#}
                                <li><a href="#!" id="meetingbtn">Meeting</a></li>
                                <li class="divider"></li>
                                <li><a href="#!" id="companyeventbtn">Company Event</a></li>
                                <li class="divider"></li>
                                <li><a href="#!" id="othersbtn">Other Events</a></li>
                                <li class="divider"></li>
                            </ul>
                            <!-- End of DS -->
                        </div>

                        <div class="col-md-12 content manageemployees-content" style="display: block; min-height: 700px;">
                            <div class="row" style="margin-left:5px;">
                                <table class="bordered highlight tb-emp-list">
                                    <thead>
                                    <tr>
                                        <th>Event Name</th>
                                        <th>Event Type</th>
                                        <th>From</th>
                                        <th>To</th>
                                        <th>Role</th>
                                        <th>Status</th>
                                        <th></th>
                                    </tr>
                                    </thead>

                                    <tbody>

                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </section>
{% endblock %}

{% block modal %}
    <!----------------------- CREATE/EDIT EVENT MODAL -------------------------->
    <div id="mo-create-event" class="modal modal-fixed-footer overflow-hidden">
        <h4 class="mo-header">Create Event
            <div class="pull-right">
                <a class="btn green" style="font-size: 16px;" id="view_event_type">Going</a>
                <a class="waves-effect waves-light btn amber" style="font-size: 16px;" id="view_event_type">Not Going</a>
            </div>
        </h4>
        <div class="modal-content">
            <div class="event-form-cont mo-body">
                <form>
                    <input type="hidden" class="txt-event-id">
                    <div class="row">
                        <div class="col-md-5">
                            <label for="event_type_modal">Event Type</label>
                            <select name="event_type" id="event_type_modal" class="browser-default event-type cmb-select-event-type">
                                <option value="" disabled selected >Select Event Type</option>
                                {% for eventtype in eventTypes %}
                                    <option value="{{ eventtype.id }}">{{ eventtype.name }}</option>
                                {% endfor %}
                            </select>
                        </div>

                        <div class="col-md-7">
                            <label for="event_name_modal">Event Name</label>
                            <input type="text" name="event-name" class="event-name txt-event-name" required>
                        </div>

                        <div class="col-md-12" id="desc-row">
                            <label for="event_desc_modal">Event Description</label>
                            <textarea id="event_desc_modal" class="materialize-textarea txt-event-description" required autocapitalize></textarea>
                        </div>

                        <div class="col-md-12">
                            <label for="event_desc_modal">Venue</label>
                            <input type="text" name="event-venue" class="txt-event-venue" required>
                        </div>

                        <!-- meeting field -->
                        <div class="meeting-request-section sect-event-tag-type display-none">
                            <div class = "col-md-12" id="guest-row">
                                <label for="tag_employees">Guests <span class="ml2"><a href="javascript:void(0);" class="link-add-tags" data-action="add">Select All</a> | <a href="javascript:void(0);" class="link-add-tags"  data-action="remove">Deselect All</a></span></label><br>
                                <select class="select-emp-tag" multiple="multiple" style="width: 100%;" id="tag_employees">
                                    {% for acc in allacc %}
                                        <option name="select2[]" value="{{ acc.email }}" data-employee-id="{{ acc.id }}"> {{ acc.getEmpProfiles[0].fname ~ ' ' ~ acc.getEmpProfiles[0].lname }} &lt;{{ acc.email }}&gt;</option>
                                    {% endfor %}
                                </select><br><br>
                            </div>

                            <div class="col-md-12" id="from-row">
                                <label>From</label><br>
                                <input type="text" name="from-event-date" readonly class="from-event-date txt-from-date" id="txt_from_event_other" placeholder="mm/dd/yyyy hh:mm">
                            </div>
                            <div class="col-md-12" id="to-row">
                                <label>To</label><br>
                                <input type="text" name="to-event-date" readonly class="to-event-date" id="txt_to_event_other" placeholder="mm/dd/yyyy hh:mm">
                            </div>
                        </div>

                        <!-- other type -->
                        <div class="other-event-section sect-event-nontag-type display-none">
                            <div class="col-md-12" id="from-row-holiday">
                                <label>From</label><br>
                                <input type="text" name="from-event-date" readonly class="from-event-date txt-from-date"
                                       id="txt_from_event_holiday" placeholder="mm/dd/yyyy">
                            </div>
                            <div class="col-md-12" id="to-row-holiday">
                                <label>To</label><br>
                                <input type="text" name="to-event-date" readonly class="to-event-date" id="txt_to_event_holiday" placeholder="mm/dd/yyyy">
                            </div>
                        </div>

                        <div class="col-md-12" id="notify-row">
                            <p class="notify-email-event">
                                <input type="checkbox" id="chk-notify-email" value="1"/>
                                <label for="chk-notify-email" class="black-text">
                                    Notify the employees via Email?
                                </label>
                            </p>
                            <p class="notify-sms-event">
                                <input type="checkbox" id="notify-sms" value="1"/>
                                <label for="notify-sms" class="black-text">
                                    Notify the employees via SMS?
                                </label>
                            </p>
                        </div>
                    </div>
                </form>
            </div>
            <br>
        </div>
        <input type="hidden" id="event_id">
        <div class="modal-footer">
            <a href="#!" class="waves-effect waves-light grey custombtn btn-flat modal-action modal-close">Close</a>
            <a class="waves-effect waves-light btn amber btn-create-event" style="margin-right:5px;">Create</a>
            {#<a class="waves-effect waves-light btn amber btn-edit" style="margin-right:5px;">Edit</a>#}
            <div class="chip add-error-chip pull-left display-none" style="font-size: 12px; color: red;">
                <i class="close material-icons">info_outline</i>
                Please Input All Fields
            </div>
        </div>
    </div>
    <!-----------------------END OF MODAL -------------------------->

    <!----------------------- VIEW EVENT MODAL -------------------------->
    <div id="mo-event-view-details" class="modal modal-fixed-footer">
        <div class="modal-content">
            <h4 class="agenda-date">
                View Event &nbsp;&nbsp;
                <span class="btn btn-default" style="font-size: 16px;" id="view_event_type">Pending</span>
            </h4>
            <br>
            <div class="event-form-cont">
                <div class="row">
                    <div class="col-md-4">
                        <span class="event-lbl">Event Date</span>
                        <input type="text" name="event-date" readonly class="event-date" id="view_event_date">
                    </div>
                    <div class="col-md-8">
                        <span class="event-lbl">Event Name </span>
                        <input type="text" name="event-name" class="event-name" id="view_event_name" readonly>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="desc-cont">
                            <span id="view_event_desc"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">

                    </div>
                </div>
            </div>
            <br>
        </div>

        <div class="modal-footer">
            <a class="waves-effect waves-light btn amber btn-resend" style="margin-right:5px; float:left;">
                Resend Notification to the Employees
            </a>
            <a href="#!" class="waves-effect waves-light grey custombtn btn-flat modal-action modal-close" id="view-btn-close">Close</a>
        </div>
    </div>
    <!-----------------------END OF MODAL -------------------------->

    <!----------------------- DELETE EVENT MODAL -------------------------->
    <div id="delete_event_modal" class="modal">
        <div class="modal-content">
            <center>
                <h4 class="modal-delete-header">
                    Are you sure you want to delete this event?&nbsp;
                </h4>
                <a href="#!" class="waves-effect waves-light red custombtn btn-flat close-modal-agenda" id="delete-btn-delete">Delete</a>
                &nbsp;&nbsp;&nbsp;
                <a href="#!" class="waves-effect waves-light green custombtn btn-flat close-modal-agenda" id="delete-btn-retain"
                   onclick="$('#delete_event_modal').closeModal();">Retain</a>
                <input type = "hidden" id = "delete-event-id"/>
            </center>
        </div>
    </div>
    <!-----------------------END OF MODAL -------------------------->
{% endblock %}


{% block customjs %}
    <script type="text/javascript">
        var moCreateEvent = '#mo-create-event';
        var moViewEventDetails = '#mo-event-view-details';
        var cmbEmpTag = $('.select-emp-tag');
        var cmbEventType = '.cmb-select-event-type';
        var btnOpenCreateModal = '.btn-open-create-modal';
        var btnCreateEvent = '.btn-create-event';
        var btnOpenEvent = '.btn-view-event';
        var sectTagFields = '.sect-event-tag-type';
        var sectNonTagFields = '.sect-event-nontag-type';
        var chkNotifyOnEmail = '#chk-notify-email';
        var tbEventList = '.tb-emp-list';

        var txtEventId = '.txt-event-id';
        var txtEventName = '.txt-event-name';
        var txtEventDesc = '.txt-event-description';
        var txtEventVenue = '.txt-event-venue';
        var txtEventHolidayFrom = 'txt_from_event_holiday';
        var txtEventHolidayTo = 'txt_to_event_holiday';
        var txtEventOtherFrom = 'txt_from_event_other';
        var txtEventOtherTo   = 'txt_to_event_other';
        var currentEmpId = parseInt('{{ app.user.id }}');

        bindEvents();
        getList();

        function getList() {
            post($('.noButton'), '{{ path('manage_events') }}', {}, function(data) {
                $(tbEventList).find('tbody').html(data.list);
                initDropDown();
            });
        }

        function saveEvent(id) {
            var eventType = $(cmbEventType).val(), error = false;
            var data = {
                event_id: id,
                event_name: $(txtEventName).val(),
                event_desc: $(txtEventDesc).val(),
                event_venue: $(txtEventVenue).val(),
                event_type: eventType,
                tags: cmbEmpTag.select2('val'),
                notify_email: $(chkNotifyOnEmail).is(':checked') ? 1 : 0
            };
            var dateFromEl =  $('#'+txtEventHolidayFrom);
            var dateToEl = $('#'+txtEventHolidayTo);

            if(EVENT_TYPE_HOLIDAY!=eventType) {
                dateFromEl = $('#'+txtEventOtherFrom);
                dateToEl = $('#'+txtEventOtherTo);
            }

            data.from_date = dateFromEl.val();
            data.to_date = dateToEl.val();

            defaultBorder([ $(cmbEventType), $(txtEventName), $(txtEventDesc), $(dateFromEl), $(dateToEl), $(txtEventVenue) ]);
            if(eventType==null) {
                errorBorder([ $(cmbEventType) ]);
                error = true;
            } else if(! removeSpace(data.event_name).length) {
                $(moCreateEvent).find(txtEventName).focus();
                errorBorder([ $(txtEventName) ]);
                error = true;
            } else if(! removeSpace(data.event_desc).length) {
                $(moCreateEvent).find(txtEventDesc).focus();
                errorBorder([ $(txtEventDesc) ]);
                error = true;
            }  else if(! removeSpace(data.event_venue).length) {
                $(moCreateEvent).find(txtEventVenue).focus();
                errorBorder([ $(txtEventVenue) ]);
                error = true;
            } else if(! removeSpace(data.from_date)) {
                errorBorder([ $(dateFromEl) ]);
                dateFromEl.focus();
                error = true;
            } else if(! removeSpace(data.to_date)) {
                errorBorder([ $(dateToEl) ]);
                dateToEl.focus();
                error = true;
            }

            if(error) {
                $(moCreateEvent).find('.add-error-chip').show();
                return false;
            }

            post($(btnCreateEvent), '{{ path('manage_event_add') }}', data, function(data) {
                if(data.error) {
                    showErrorBar(data.error);
                } else if(data.success) {
                    getList();
                    resetCreateForm();
                    showSuccessBar(data.success);

                    $(moCreateEvent).closeModal();
                }
            });
        }

        function resetCreateForm() {
            var dateFromEl =  $('#'+txtEventHolidayFrom);
            var dateToEl = $('#'+txtEventHolidayTo);
            var dateFromEl2 = $('#'+txtEventOtherFrom);
            var dateToEl2 = $('#'+txtEventOtherTo);

            defaultBorder([ $(cmbEventType), $(txtEventName), $(txtEventDesc), $(dateFromEl), $(dateToEl), $(dateFromEl2), $(dateToEl2), $(txtEventVenue) ]);

            $(txtEventId).val('');
            $(moCreateEvent).find('form').trigger('reset');
            $('select').trigger('change');
            $(sectTagFields).hide();
            $(sectNonTagFields).hide();
        }

        function bindEvents() {
            DOC.on('click', btnOpenCreateModal, function(e) {
                resetCreateForm();
                $(moCreateEvent).openModal();
            });

            DOC.on('click', btnCreateEvent, function(e) {
                var id = $(txtEventId).val();
                saveEvent(id);
            });

            DOC.on('click', '.link-add-tags', function() {
                var act = $(this).data('action');
                if(act=='add')
                    cmbEmpTag.find('option').prop("selected","selected");
                else
                    cmbEmpTag.find('option').removeAttr("selected");

                cmbEmpTag.trigger('change');
            });

            DOC.on('click', btnOpenEvent, function() {
                var data = {
                    event_id:  $(this).data('id'),
                    event_name: $(this).data('event-name'),
                    event_desc: $(this).data('event-desc'),
                    event_venue: $(this).data('event-venue'),
                    event_type: $(this).data('type'),
                    tags: ($(this).data('event-tags').toString()).split(','),
                    from: $(this).data('event-from'),
                    to: $(this).data('event-to')
                };
                var createdBy = $(this).data('created-by');

                resetCreateForm();

                var fromEl = txtEventHolidayFrom;
                var toEl   = txtEventHolidayTo;
                if(data.event_type!=EVENT_TYPE_HOLIDAY) {
                    fromEl = txtEventOtherFrom;
                    toEl   = txtEventOtherTo;
                }

                $(txtEventId).val(data.event_id);
                $(txtEventName).val(data.event_name);
                $(txtEventDesc).val(data.event_desc);
                $(txtEventVenue).val(data.event_venue);
                $(cmbEventType).val(data.event_type).trigger('change');

                setPikadayData('set-date', fromEl, data.from);
                setPikadayData('set-date', toEl, data.to);

                for(i in data.tags) {
                    cmbEmpTag.find('option[data-employee-id="'+data.tags[i]+'"]').prop('selected', 'selected');
                }

                cmbEmpTag.trigger('change');

                if(createdBy!=currentEmpId) {

                }

                $(moCreateEvent).openModal();
            });

            DOC.on('change', cmbEventType, function() {
                var type = $(this).val();

                if(EVENT_TYPE_HOLIDAY==type) {
                    $(sectNonTagFields).show();
                    $(sectTagFields).hide();
                } else {
                    $(sectTagFields).show();
                    $(sectNonTagFields).hide();
                }
            });

            cmbEmpTag.select2({
                placeholder: 'Type name here'
            });

            initPicker(txtEventHolidayFrom, new Date(CURRENT_YEAR-2, 12, 31), new Date(CURRENT_YEAR+20, 12, 31), function() {
                setTimeout( function() {
                    var val = $('#'+txtEventHolidayFrom).val();
                    var pd = setPikadayData('start-range', txtEventHolidayTo, new Date(val));

                    if(!removeSpace($('#'+txtEventHolidayTo).val()).length) pd.show();
                }, 200);
            });

            initPicker(txtEventHolidayTo, new Date(CURRENT_YEAR-2, 12, 31), new Date(CURRENT_YEAR+20, 12, 31), function() {
                setTimeout( function() {
                    var val = $('#'+txtEventHolidayTo).val();
                    var pd = setPikadayData('end-range', txtEventHolidayFrom, new Date(val));

                    if(!removeSpace($('#'+txtEventHolidayFrom).val()).length) pd.show();
                }, 200);
            });

            var param = { showTime: true, use24hour: false, format: 'YYYY-MM-DD hh:mm A'};

            initPicker(txtEventOtherFrom, new Date(CURRENT_YEAR-2, 12, 31), new Date(CURRENT_YEAR+20, 12, 31), function() {
                setTimeout( function() {
                    var val = $('#'+txtEventOtherFrom).val();
                    var pd = setPikadayData('start-range', txtEventOtherTo, new Date(val));

                    if(!removeSpace($('#'+txtEventOtherTo).val()).length) pd.show();
                }, 200);
            }, param);

            initPicker(txtEventOtherTo, new Date(CURRENT_YEAR-2, 12, 31), new Date(CURRENT_YEAR+20, 12, 31), function() {
                setTimeout( function() {
                    var val = $('#'+txtEventOtherTo).val();
                    var pd = setPikadayData('end-range', txtEventOtherFrom, new Date(val));

                    if(!removeSpace($('#'+txtEventOtherFrom).val()).length) pd.show();
                }, 200);
            }, param);
        }


        var meetingPersonsInvolved = cmbEmpTag;

    </script>
    <script type="text/javascript">
        /*--------Variables---------*/
        // Row elements
        var event_row, event_date, event_name;
        var event_id, event_type, event_desc;

        // create & edit
        var add_header = $(".create-header");
        var edit_header = $(".edit-header");
        var add_btn_modal = $(".btn-create");
        var edit_btn_modal = $(".btn-edit");
        var notify_option = $(".notify-event");
        var add_edit_event_modal = $('#add_event_modal');
        var add_edit_date = $('#event_date_modal');
        var add_edit_name = $('#event_name_modal');
        var add_edit_desc = $('#event_desc_modal');
        var add_edit_type = $('#event_type_modal');
        var add_edit_id = $('#event_id');
        var meetingPersonsInvolved = $('.select-emp-tag');
        var picker = null;
        var edit_event_modal = $('#edit_event_modal');

        // view & delete
        var view_date = $('#view_event_date');
        var view_name = $('#view_event_name');
        var view_type = $('#view_event_type');
        var view_desc = $('#view_event_desc');
        var view_modal = $('#view_event_modal');
        var resend_btn = $('.btn-resend');
        var delete_id = $("#delete-event-id");
        var delete_modal = $("#delete_event_modal");
        var delete_button = $("#delete-btn-delete");

        // add note
        var addnote_modal = $('#add_note_modal');
        var notelist_table = $('.note-list');
        var addnote_form = $('.addnote-content');
        var createnote_button = $('.btn-create-note');
        var addnote_button = $('#btn-add-note');
        var cancel_button = $('.cancel-modal-agenda');
        var close_button = $('.close-modal-agenda');

        var pending_button = $("#pending");
        var pending_form = $(".pending-form");
        pending_button.css("display", "block");
        pending_form.css("display", "none");

        $(document).on("click", "#pending", function(){
            pending_button.css("display", "none");
            pending_form.css("display", "block");
        });

        /*-----------End-----------*/

        /*----------- add note function -------------*/
        $(document).on("click", "#viewnotesbtn", function(){
            addnote_button.css("display", "block");
            notelist_table.css("display", "table");
            createnote_button.css("display", "none");
            addnote_form.css("display", "none");
            cancel_button.css("display", "none");
            close_button.css("display", "block");
            addnote_modal.openModal();
        });

        $(document).on("click", "#btn-add-note", function(){
            addnote_button.css("display", "none");
            notelist_table.css("display", "none");
            createnote_button.css("display", "block");
            cancel_button.css("display", "block");
            close_button.css("display", "none");
            addnote_form.css("display", "block");
        });

        $(document).on("click", ".cancel-modal-agenda", function(){
            addnote_button.css("display", "block");
            notelist_table.css("display", "table");
            cancel_button.css("display", "none");
            close_button.css("display", "block");
            createnote_button.css("display", "none");
            addnote_form.css("display", "none");
        });

        /*----------- view note function -------------*/
        $(document).on("click", ".note-tr", function(){

        });

        /*----------- add & edit functions -----------*/
        $(document).on("click", "#btn-add-event", function () {
            add_header.css("display", "block");
            edit_header.css("display", "none");
            add_btn_modal.css("display", "block");
            edit_btn_modal.css("display", "none");
            notify_option.css("display", "block");
//            picker = new Pikaday(
//                    {
//                        field: document.getElementById('event_date_modal'),
//                        firstDay: 1,
//                        minDate: new Date(),
//                        maxDate: new Date(2020, 12, 31),
//                        yearRange: [2000, 2020],
//                        format: 'MM/DD/YYYY'
//                    });
            add_edit_event_modal.openModal();
        });

        $(document).on("click", "#btn-close", function () {
            removeFields();
            add_edit_event_modal.closeModal();
            edit_event_modal.closeModal();
        });

        $(document).on("click", ".btn-edit", function () {
            elements = [add_edit_date, add_edit_desc, add_edit_desc, add_edit_type];
            var validate = checkFields(elements);
            if (validate == true) // true == there are errors
                return;

            event_id = add_edit_id.val();
            date = add_edit_date.val();
            name = add_edit_name.val();
            type = add_edit_type.val();
            desc = add_edit_desc.val();
            data = {
                event_date: date,
                event_name: name,
                event_desc: desc,
                event_type: type,
                event_id: event_id
            };
            callback = function(data) {
                removeFields();
                add_edit_event_modal.closeModal();
            };
            done = function(data) {
                if (data["result"]) {
                    changeInfoView(event_id, date, name, desc, type);
                    showSuccessBar(data["result"]);
                } else if (data["error"]) {
                    showErrorBar(data["error"]);
                }
            };
            always = function(data) {
                //
            };
            post(edit_btn_modal, "{{ path('edit_event') }}", data, callback, done, always);
        });

        $(document).on("click", ".btn-create", function () {
            elements = [add_edit_date, add_edit_desc, add_edit_desc, add_edit_type];
            var validate = checkFields(elements);
            if (validate == true) // true == there are errors
                return;

            date = add_edit_date.val();
            name = add_edit_name.val();
            type = add_edit_type.val();
            desc = add_edit_desc.val();

            if ($('#notify').is(":checked")) notify = 1;
            else notify = 0;

            data = {
                event_date: date,
                event_name: name,
                event_desc: desc,
                event_type: type,
                notify: notify
            };

            callback = function (data) {
                removeFields();
                add_edit_event_modal.closeModal();
            };

            done = function (data) {
                if (data["result"]) {
                    changeInfoView(event_id, date, name, desc, type);
                    showSuccessBar(data["result"]);
                    addEvent(date, name, desc, type, data["id"]);
                } else if (data["error"]) {
                    showErrorBar(data["error"]);
                }
            };

            always = function (data) {
                //
            };

            post(add_btn_modal, "{{ path('manage_event_add') }}", data, callback, done, always);
        });

        $(document).on("click", "#editeventbtn", function () {
            event_row = $(this).closest("tr.event-tr");
            event_id = event_row.data("id");
            event_date = event_row.find("td.event-date").html();
            event_name = event_row.find("td.event-name").html();
            event_type = event_row.find("td.event-type").html();
            event_desc = event_row.find("td.event-desc").html();
            edit(event_type, event_date, event_name, event_desc, event_id);
        });

        /*$(document).on("click", ".btnEditEvent", function () {
         event_row = $(this).closest("tr.event-tr");
         event_id = event_row.data("id");
         event_date = event_row.find("td.event-date").html();
         event_name = event_row.find("td.event-name").html();
         event_type = event_row.find("td.event-type").html();
         event_desc = event_row.find("td.event-desc").html();
         edit(event_type, event_date, event_name, event_desc, event_id);
         });*/

        function edit(type, date, name, desc, id) {
            add_edit_date.val(date);
            if(type == "Holiday")
                add_edit_type.val(1);
            else add_edit_type.val(2);
            add_edit_name.val(name);
            add_edit_desc.val(desc);
            add_edit_id.val(id);
            add_header.css("display", "none");
            edit_header.css("display", "block");
            add_btn_modal.css("display", "none");
            edit_btn_modal.css("display", "block");
            notify_option.css("display", "none");
            picker = new Pikaday(
                    {
                        field: document.getElementById('event_date_modal'),
                        firstDay: 1,
                        minDate: new Date(),
                        maxDate: new Date(2020, 12, 31),
                        yearRange: [2000, 2020],
                        format: 'MM/DD/YYYY'
                    });
            edit_event_modal.openModal();
        }

        function removeFields() {
            picker.destroy();
            event_date = add_edit_date.val('');
            event_name = add_edit_name.val('');
            event_desc = add_edit_desc.val('');
            event_type = add_edit_type.val('');
        }

        function changeInfoView(event_id, date, name, desc, type) {
            event_row = $('tr.event-tr[data-id="' + event_id + '"]');
            event_date = event_row.find("td.event-date");
            event_name = event_row.find("td.event-name");
            event_type = event_row.find("td.event-type");
            event_desc = event_row.find("td.event-desc");
            event_date.html(date);
            event_name.html(name);
            event_desc.html(desc);
            if(type == 1) event_type.html("Holiday");
            else event_type.html("Regular");
        }

        /*-------------- View & Delete ---------------*/

        $(document).on("click", ".btn-resend", function () {
            date = view_date.val();
            name = view_name.val();
            type = view_type.text();
            desc = view_desc.text();

            data = {
                event_date: date,
                event_name: name,
                event_desc: desc,
                event_type: type
            };

            callback = function (data) {
                removeFields();
                view_modal.closeModal();
            };

            done = function (data) {
                if (data["result"]) {
                    showSuccessBar(data["result"]);
                } else if (data["error"]) {
                    showErrorBar(data["error"]);
                }
            };

            always = function (data) {
                //
            };

            post(resend_btn, "{{ path('notify_event') }}", data, callback, done, always);
        });

        $(document).on("click", "#viewdetailsbtn", function(){
            event_row = $(this).closest("tr.event-tr");
            event_id = event_row.data("id");
            event_date = event_row.find("td.event-date").html();
            event_name = event_row.find("td.event-name").html();
            event_type = event_row.find("td.event-type").html();
            event_desc = event_row.find("td.event-desc").html();
            view(event_type, event_date, event_name, event_desc);
        });

        /*$(document).on("click", ".btnViewEvent", function () {
         event_row = $(this).closest("tr.event-tr");
         event_id = event_row.data("id");
         event_date = event_row.find("td.event-date").html();
         event_name = event_row.find("td.event-name").html();
         event_type = event_row.find("td.event-type").html();
         event_desc = event_row.find("td.event-desc").html();
         view(event_type, event_date, event_name, event_desc);
         });*/

        $(document).on("click", "#canceleventbtn", function () {
            event_row = $(this).closest("tr.event-tr");
            event_id = event_row.data("id");
            delete_id.val(event_id);
            delete_modal.openModal();
        });

        /*$(document).on("click", ".btnDeleteEvent", function () {
         event_row = $(this).closest("tr.event-tr");
         event_id = event_row.data("id");
         delete_id.val(event_id);
         delete_modal.openModal();
         });*/

        $(document).on("click", "#delete-btn-delete", function () {
            event_id = delete_id.val();
            data = { event_id: event_id };
            callback = function (data) {
                delete_modal.closeModal();
            };
            done = function (data) {
                if (data["result"]) {
                    $('tr.event-tr[data-id="' + event_id + '"]').remove();
                    showSuccessBar(data["result"]);
                } else if (data["error"]) {
                    showErrorBar(data["error"]);
                }
            };
            always = function (data) {
                //
            };
            post(delete_button, "{{ path('delete_event') }}", data, callback, done, always);
        });

        function view(type, date, name, desc) {
            view_date.val(date);
            view_type.text(type);
            view_name.val(name);
            view_desc.text(desc);
            view_modal.openModal();
        }


        function addEvent(date, name, desc, type, id) {
            var row = document.createElement("tr");
            row.className = "event-tr";
            row.dataset.id = id;

            var td_name = document.createElement("td");
            td_name.className = "event-name";
            td_name.textContent = name;

            var td_date = document.createElement("td");
            td_date.className = "event-date";
            td_date.textContent = date;

            var td_type = document.createElement("td");
            td_type.className = "event-type";
            if(type == 1) td_type.textContent = "Holiday";
            else td_type.textContent = "Regular";

            var td_desc = document.createElement("td");
            td_desc.className = "event-desc";
            td_desc.style.display = "none";
            td_desc.textContent = desc;

            var td_view = document.createElement("td");
            td_view.style.float = "right";

            var btn_view = document.createElement("button");
            btn_view.className = "waves-effect waves-light btn green btnViewEvent";
            btn_view.textContent = "View";
            btn_view.style.marginRight = "14px";
            td_view.append(btn_view);

            var btn_edit = document.createElement("button");
            btn_edit.className = "waves-effect waves-light btn orange btnEditEvent";
            btn_edit.textContent = "Edit";
            btn_edit.style.marginRight = "14px";
            td_view.append(btn_edit);

            var btn_del = document.createElement("button");
            btn_del.className = "waves-effect waves-light btn red btnDeleteEvent";
            btn_del.style.marginRight = "10px";

            var delcontent = document.createElement("i");
            delcontent.className = "material-icons";
            delcontent.textContent = "delete";
            btn_del.append(delcontent);
            td_view.append(btn_del);

            row.append(td_name);
            row.append(td_date);
            row.append(td_type);
            row.append(td_desc);
            row.append(td_view);

            $("tbody").append(row);
        }
    </script>
{% endblock %}


