{% extends 'AdminBundle::base.html.twig' %}

{% block body %}
    <div class="page-content">
        <div class="col-md-12 light-blue darken-1 heading z-depth-1">
            <div class="responsive-nav"><a class="btn-flat"><i class="material-icons res-menu">reorder</i></a></div>
            <h3 class="center-align"><div class="widget-subtitle plugin-date">Loading...</div></h3>
        </div>
        <div class="col-md-12 content">
            <!-- <div class="row"> -->
            <div class="col-md-12">
                <div id="alert_holder"></div>
                <div class="calendar">
                    <div id="calendar"></div>
                </div>
            </div>
            <!-- </div> -->
        </div>
    </div>

    <!-----------------------DAILY AGENDA MODAL -------------------------->
    <div id="daily_agenda" class="modal modal-fixed-footer">

        <div class="modal-content">
            <h4>
                <i class="small material-icons" id = "agenda" onmouseover="this.style.cursor='pointer'">today</i>&nbsp;
                <span class = "agenda-date" style = "font-size: 32px;">Daily Agenda</span>
                <span class = "agenda-date-hidden" style = "display:none;">Daily Agenda</span>
                <div style = "float: right">
                    <button class="waves-effect waves-light btn btn-reqmeeting" style = "font-family: 'Roboto', sans-serif; font-size: 14px; font-weight: normal; padding: 0 1rem; display:none;">
                        Request Meeting
                    </button>
                    <button class="waves-effect waves-light btn orange btn-reqleave" style = "font-family: 'Roboto', sans-serif; font-size: 14px; font-weight: normal; padding: 0 1rem">
                        Request Leave
                    </button>
                </div>
            </h4>

            <div class="agenda-list">
                <ul class="collection agenda-list">
                    <li class="collection-item avatar" id="li-append"><i class="material-icons circle">perm_identity</i><span id="head-title"></span> <p id="daterange"></p></li>
                </ul>
            </div>

            <!------------REQUEST MEETING FORM------------->
            <div class="form-reqmeeting">
                <div class = "row">
                    <div class = "col-xs-1">
                        <span class="reqleave-p" style="margin-top: 0;">Cc: &nbsp;</span>
                    </div>
                    <div class = "col-md-9">
                        <select class="select-emp-tag" multiple="multiple" style="width: 620px;">
                            {% for acc in allacc %}
                                <option name="select2[]" value="{{ acc.email }}" data-employee-id="{{ acc.getEmpProfiles[0].id }}"> {{ acc.getEmpProfiles[0].fname ~ ' ' ~ acc.getEmpProfiles[0].lname }}</option>
                            {% endfor %}
                        </select>
                    </div>
                </div>
                {#<hr style = "margin-top: 20px; margin-bottom: 7px; border-color:#ff9800;">#}
                <div class = "row">
                    <div class="col-md-2"><p>Meeting Title</p></div>
                    <div class="col-md-10">
                        <input type = "text" name="meeting-title" class="meeting-title" id="meeting_title" style = "padding-left: 10px;">
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4"><span class="reqleave-p">Date</span><br></div>
                    <div class="col-md-4"><span class="reqleave-p">From</span><br></div>
                    <div class="col-md-4"><span class="reqleave-p">To</span><br></div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <input type="date" readonly id="meeting_date"/>
                    </div>
                    <div class="col-md-4">
                        <input type="time" class="from-time" id="time-from" placeholder="From"/>
                    </div>
                    <div class="col-md-4">
                        <input type="time" class="from-time" id="time-to" placeholder="To"/>
                    </div>
                </div>

                <div class = "row">
                    <div class="col-md-12">
                        <span class="reqleave-p">Note</span><br>
                        <input id="meeting_note" placeholder="Type your message here...">
                    </div>
                </div>
            </div>

            <!------------REQUEST LEAVE FORM------------->
            <div class="form-reqleave">
                <div class="input-field">
                    <div class="row">
                        <div class = "form-container">
                            <div class="multi_reqleaveform">
                                <div class="req_inner">
                                    <div class="col-md-6 reqleave-lbl">
                                        <span class="reqleave-p">From</span>
                                        <input type = "text" name="start-date-0" readonly placeholder="Start Date" class="start-date datepicker" id="start_date_0">
                                    </div>
                                    <div class="col-md-6 reqleave-lbl">
                                        <span class="reqleave-p">To</span>
                                        <input type = "text" name="end-date-0" readonly placeholder="End Date" class="end-date datepicker"  id="end_date_0" >
                                    </div>
                                </div>

                                <div class="col-md-12">
                                    <textarea id="reason-leave-sbt-0" class="materialize-textarea reason" placeholder="Reason..." required></textarea>
                                </div>
                            </div>
                        </div>
                        <a class="btn-floating btn-large waves-effect waves-light red" id="add-request-form" style = "float:right; margin-right: 10px;"><i class="material-icons">add</i></a>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <a href="#!" class="waves-effect waves-light grey custombtn btn-flat close-modal-agenda" id = "btn-close">Close</a>
            <a href="#!" class="waves-effect waves-light amber custombtn btn-flat btn-submitleave" style="margin-right:5px;">Submit Leave</a>
            <a href="#!" class="waves-effect waves-light amber custombtn btn-flat btn-submitmeeting" style="margin-right:5px;">Submit Meeting</a>
        </div>
    </div>
    <!-----------------------END OF MODAL -------------------------->
{% endblock %}

{% block customjs %}

    <script type = "text/javascript">
        // ---------------- VARIABLES --------------- //
        // Modals
        var dailyAgendaModal = $('#daily_agenda');

        // Forms
        var agendaDate = $('.agenda-date');
        var agendaDateDiffFormat = $('.agenda-date-hidden');
        var agendaList = $('.agenda-list');
        var requestMeetingForm = $('.form-reqmeeting');
        var requestLeaveForm = $('.form-reqleave');
        var meetingTitleInput = $('#meeting_title');
        var meetingDateInput = $('#meeting_date');
        var fromMeetingTimeInput = $('#time-from');
        var toMeetingTimeInput = $('#time-to');
        var meetingNoteInput = $('#meeting_note');
        var meetingPersonsInvolved = $('.select-emp-tag');

        // Functional Buttons
        var requestMeetingButton = $('.btn-reqmeeting');
        var requestLeaveButton = $('.btn-reqleave');
        var agendaButton = $('#agenda');
        var submitMeetingButton = $('.btn-submitmeeting');
        var submitLeaveButton = $('.btn-submitleave');
        var closeDailyAgendaModal = $('.close-modal-agenda');
        var btnRemoveLeaveFormEntry = '.btn-remove-leave-form-entry';

        // Main Variables
        var typeleave = '';
        var date_meeting = null;
        var endDatePicker = null;
        var startDatePicker = null;
        var currentYear = (new Date()).getFullYear();

        $(document).on("click", ".btn-reqmeeting", function () {
            hideForms();
            requestMeetingForm.show();
            submitMeetingButton.show();
            date_meeting = new Pikaday(
                {
                    field: document.getElementById('meeting_date'),
                    firstDay: 1,
                    minDate: new Date(),
                    maxDate: new Date(2020, 12, 31),
                    yearRange: [2000, 2020],
//                format: 'MM/DD/YYYY'
                });
        });

        $(document).on("click", ".btn-reqleave", function () {
            hideForms();
            requestLeaveForm.show();

            var startValue = agendaDateDiffFormat.text();

            $('#start_date_0').val(startValue);
            $('#end_date_0').val('');
            $('#reason-leave-sbt-0').val('');

            initPicker('start_date_0', new Date(), new Date(currentYear+20, 12, 31), function() {
                setTimeout( function() {
                    var startVal = $('#start_date_0').val();
                    setPikadayData('start-range', 'end_date_0', new Date(startVal)).show();
                }, 200);
            });

            initPicker('end_date_0', new Date(startValue), new Date(currentYear+20, 12, 31), function() {
                setTimeout( function() {
                    var endVal =  $('#end_date_0').val();
                    setPikadayData('end-range', 'start_date_0', new Date(endVal));
                }, 200);
            });

            submitLeaveButton.show();
        });

        $(document).on("click", "#agenda", function () {
            hideForms();
            agendaList.show();
        });

        $(document).on("click", ".close-modal-agenda", function () {
            hideForms();
            agendaList.show();
            dailyAgendaModal.closeModal();
            if(date_meeting != null) date_meeting.destroy();
        });

        $(document).on('click', btnRemoveLeaveFormEntry, function() {
             $(this).closest('.multi_reqleaveform').remove();
        });

        function hideForms() {
            removeFields();
            agendaList.hide();
            requestMeetingForm.hide();
            requestLeaveForm.hide();
            submitLeaveButton.hide();
            submitMeetingButton.hide();
        }

        function removeFields() {
            if(date_meeting != null) date_meeting.destroy();
            $('.select2-selection__choice').remove();
            meetingTitleInput.val('');
            meetingNoteInput.val('');
            meetingDateInput.val('');
            fromMeetingTimeInput.val('');
            toMeetingTimeInput.val('');
        }

        $(document).on("click", ".btn-submitmeeting", function () {
            console.log("test");
            meetingTitle = meetingTitleInput.val();
            meetingNote = meetingNoteInput.val();
            taggedPersons = meetingPersonsInvolved.select2("val");
            meetingDate = meetingDateInput.val();
            fromMeetingTime = fromMeetingTimeInput.val();
            toMeetingTime = toMeetingTimeInput.val();
            meeting_from = meetingDate + " " + fromMeetingTime;
            meeting_to = meetingDate + " " + toMeetingTime;
            meeting_from_unix = new Date(meeting_from).getTime();
            meeting_to_unix = new Date(meeting_to).getTime();

            elements = [meetingTitleInput, meetingNoteInput];
            if(checkNullFields())
                return;
//            if (checkFields(elements)) // true == there are errors
//                return;
//            if(checkNullFields(taggedPersons, fromMeetingTime, toMeetingTime))
//                return;

            data = {
                meetingTitle:meetingTitle,
                meetingNote:meetingNote,
                taggedemail:taggedPersons,
                meetingDate:meetingDate,
                meetingTimeFrom:meeting_from,
                meetingTimeTo:meeting_to
            };

            callback = function(data){
                date_meeting.destroy();
                dailyAgendaModal.closeModal();
            };

            done = function (data) {
                if (data["result"]) {
                    showSuccessBar(data["result"]);
                } else if (data["error"]) {
                    showErrorBar(data["error"]);
                }
            };

            always = function (data) {};
            post(submitMeetingButton, "{{ path('request_meeting') }}", data, callback, done, always);
        });

        function checkNullFields() {
            var hasRequired = 0;

            if(meetingTitleInput.val() == ''){
                notifyInvalid(meetingTitleInput);
                hasRequired++;
            }
            if(meetingNoteInput.val() == ''){
                notifyInvalid(meetingNoteInput);
                hasRequired++;
            }

            if(!taggedPersons){
                notifyInvalid(meetingPersonsInvolved);
                hasRequired++;
            }
            if(!fromMeetingTime){
                notifyInvalid(fromMeetingTimeInput);
                hasRequired++;
            }
            if(!toMeetingTime){
                notifyInvalid(toMeetingTimeInput);
                hasRequired++;
            }

            if (hasRequired > 0)
                return true;
            else return false;
        }

        $('.btn-ip-cancel').click(function(e){
            e.preventDefault();
            $('.diff-ip-container').hide();
        });
        $('.btn-ip-yes').click(function(e){
            e.preventDefault();
            $('.diff-ip-reason').show();
        });
        $('.modal-trigger').leanModal();
        function showBirthday() {
            var bdaynames = [];
            {% for names in userbdaynames %}
            bdaynames.push("{{ names }}");
            {% endfor %}
            console.log(bdaynames);
            if(bdaynames.length) {
                $('.modal-birthday-notify-container').show();
            }
            $('.btn-bdayclose').click( function() {
                $('.modal-birthday-notify-container').hide();
            });
        }

    </script>

    <script> // SCRIPT FOR MULTIPLE DATES REQUEST LEAVE
        var unique_id = 0;

        $(document).ready(function(){
            $("#add-request-form").click(function (){
                cloneRequestLeaveFields();
            });

            $("#btn-close").click(function() {
                removeClonedFields();
            });
        });

        function cloneRequestLeaveFields(){
            var formSect = requestLeaveForm.find('.multi_reqleaveform');
            var unique_id = requestLeaveForm.find('.multi_reqleaveform:last').data('endid') ?
                    requestLeaveForm.find('.multi_reqleaveform:last').data('endid')+1 : formSect.length;

            var form_container = document.createElement("div");                         // <div class = "multi_reqleaveform">
            form_container.setAttribute("data-endid", unique_id);
            form_container.className = "multi_reqleaveform newForm";
            form_container.innerHTML = '<div class="col-md-12" style="margin-bottom: 20px;"><hr style="border: 1px dashed #ccc;"></div>';

            var container = document.createElement("div");                              // <div class = "req_inner"> -> Container
            container.className = "req_inner";

            var from_cont = document.createElement("div");                              // <div class = "col-md-6..."> for FROM
            from_cont.className = "col-md-6 reqleave-lbl";

            var from_lbl = document.createElement("span").textContent = "From";         // <span> FROM </span> just label
            from_lbl.className = "reqleave-p";

            var from_input = document.createElement("input");                           // <input> start date
            from_input.setAttribute("name", "start-date-" + unique_id);
            from_input.setAttribute("placeholder", "Start Date");
            from_input.setAttribute("id", "start_date_" + unique_id);
            from_input.setAttribute("readonly", "true");
            from_input.setAttribute("required", "true");
            from_input.className = "start-date datepicker";

            var to_cont = document.createElement("div");                                // to container
            to_cont.className = "col-md-6 reqleave-lbl";

            var to_lbl = document.createElement("span").textContent = "To";             // To label (span class)
            to_lbl.className = "reqleave-p";

            var to_input = document.createElement("input");                             // <input> end date
            to_input.setAttribute("name", "end-date-" + unique_id);
            to_input.setAttribute("placeholder", "End Date");
            to_input.setAttribute("id", "end_date_" + unique_id);
            to_input.setAttribute("readonly", "true");
            to_input.setAttribute("required", "true");
            to_input.className = "end-date datepicker";

            var reason_cont = document.createElement("div");                            // <div class = "col-md-12"> for REASON
            reason_cont.className = "col-md-12";

            var reason = document.createElement("textarea");                            // <textarea> -> REASON
            reason.className = "materialize-textarea reason";
            reason.setAttribute("id", "reason-leave-sbt-" + unique_id);
            reason.setAttribute("placeholder", "Reason...");
            reason.setAttribute("required", "true");

            var deleteButton = document.createElement('button');
            deleteButton.className = "btn-floating btn-medium red text-center btn-remove-leave-form-entry";
            deleteButton.innerHTML = '<i class="medium material-icons">delete</i>';
            var delFrame = document.createElement('div');
            delFrame.className = 'text-center';
            delFrame.append(deleteButton);

            form_container.append(container);
            form_container.append(reason_cont);
            form_container.append(delFrame);
            reason_cont.append(reason);
            container.append(from_cont);
            from_cont.append(from_lbl);
            from_cont.append(from_input);
            container.append(to_cont);
            to_cont.append(to_lbl);
            to_cont.append(to_input);
            $(".form-container").append(form_container);

            //initialize pikaday
            var startValue = agendaDateDiffFormat.text();
            var strtEl = 'start_date_'+unique_id;
            var endEL = 'end_date_'+unique_id;

            initPicker(strtEl, new Date(startValue), new Date(currentYear+20, 12, 31), function() {
                setTimeout( function() {
                    setPikadayData('start-range', endEL, new Date($('#'+strtEl).val())).show();
                }, 200);
            });

            initPicker(endEL, new Date(startValue), new Date(currentYear+20, 12, 31), function() {
                setTimeout( function() {
                    setPikadayData('end-range', strtEl, new Date($('#'+endEL).val()))
                }, 200);
            });
        }

        submitLeaveButton.click(function(){
            // validate first
            var validate = checkFields();
            if(validate == true) // true == there are errors
                return;
            // else continue
            var obj = [];
            typeleave = 2;

            requestLeaveForm.find('.multi_reqleaveform').each( function() {
                var start = $(this).find('.start-date').val();
                var end = $(this).find('.end-date').val();
                var reason = $(this).find('.reason').val();

                obj.push({start_date: start, end_date: end, reason: reason});
            });

            data = {
                typeleave: typeleave,
                obj: obj
            };

            callback = function(data){
                //
            };

            done = function(data){
                if (data["result"]) {
                    removeClonedFields();
                    $('#daily_agenda').closeModal();
                    showSuccessBar(data["result"]);
                } else if (data["error"]) {
                    // error
                    showErrorBar(data["error"]);
                }
            };

            always = function(data){
                if(endDatePicker != null)
                    endDatePicker.destroy();
            };

            post(submitLeaveButton, "{{path('request_leave')}}", data, callback, done, always);
        });

        function checkFields() {      // Checking if there are any inputs on the required fields
            var error = 0;

            requestLeaveForm.find('.multi_reqleaveform').each( function() {
                $(this).find('input, textarea').each( function() {

                    if($(this).val()=='') {
                        if(error==0) {
                            $(this).select();
                        }

                        $(this).css({'border-color': 'red'});
                        error++;
                    } else {
                        $(this).css({'border-color': 'gray'})
                    }
                });
            });

            return error ? true : false;
        }

        function removeClonedFields() {         // basically removes all the cloned fields
            $('#start_date').val('');
            $('#end_date').val('');
            $('#reason-leave-sbt').val('');
            $('.newForm').remove();
        }
    </script>

{% endblock %}