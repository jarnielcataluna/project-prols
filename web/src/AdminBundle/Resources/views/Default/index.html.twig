{% extends 'AdminBundle::base.html.twig' %}

{% block body %}
        <div class="page-content">
            <div class="col-md-12 light-blue darken-1 heading z-depth-1">
                <div class="responsive-nav"><a class="btn-flat"><i class="material-icons res-menu">reorder</i></a></div>
                <h3 class="center-align"><div class="widget-subtitle plugin-date">Loading...</div></h3>
            </div>
            <div class="col-md-12 content">
                <!-- <div class="row"> -->
                    <div class="col-md-12">
                        <div id="alert_holder"></div>
                        <div class="calendar">
                            <div id="calendar"></div>
                        </div>
                    </div>
                <!-- </div> -->
            </div>
        </div>

        <!-----------------------DAILY AGENDA MODAL -------------------------->
        <div id="daily_agenda" class="modal modal-fixed-footer">

            <div class="modal-content">
                <h4 class="agenda-date">Daily Agenda</h4>
                <div class="agenda-list">
                    <ul class="collection agenda-list">

                        <li class="collection-item avatar" id="li-append"><i class="material-icons circle">perm_identity</i><span id="head-title"></span> <p id="daterange"></p></li>

                    </ul>
                </div>

                <div class="agenda-buttons">
                    <a class="waves-effect waves-light btn orange btn-reqmeeting">Request Meeting</a>
                    <a class="waves-effect waves-light btn orange btn-reqleave">Request Leave</a>
                </div>

                <!------------REQUEST MEETING FORM------------->
                <div class="form-reqmeeting">
                    <div class="">
                        <br/>
                        <p>Meeting Title</p>
                        <input type="text" name="meeting-title"/>
                    </div>
                    <div class="reqmeeting-emp-tag" id="">
                        <br/>
                      <p>Tag Employee:</p>
                        <select class="select-emp-tag" multiple="multiple">
                            {% for acc in allacc %}
                            <option name="select2[]" value="{{ acc.email }}" data-employee-id="{{ acc.getEmpProfiles[0].id }}"> {{ acc.getEmpProfiles[0].fname ~ ' ' ~ acc.getEmpProfiles[0].lname }}</option>
                            {% endfor %}
                        </select>

                    </div>
                    <div class="Date-time-meeting">
                        <p>Date:</p>
                        <input type="text" placeholder="Date" class="datepicker" id="meeting_date"/>
                        <p>From:</p>
                        <input type="time" class="from-time" id="time-from"/>
                        <p>To:</p>
                        <input type="time" class="from-time" id="time-to"/>
                    </div>
                    <div class="input-field">
                        <input id="meeting" placeholder="Type your message here...">
                    </div>
                    <a class="waves-effect waves-light btn amber btn-submitmeeting">Submit</a>
                    <div class="chip required-field">
                        required field!
                    </div>
                    <div class="chip sent">
                        sent!
                    </div>
                </div>

                <!------------REQUEST LEAVE FORM------------->
                <div class="form-reqleave">
                    <div class="input-field" style="padding-top: 30px;">
                        <div class="row">
                            <div class = "form-container">
                                <div class="multi_reqleaveform" style = "margin-top: 10px;">
                                    <div class="req_inner">
                                        <div class="col-md-6 reqleave-lbl">
                                            <span class="reqleave-p">From</span>
                                            <input type = "text" name="start-date" readonly placeholder="Start Date" class="start-date datepicker" id="start_date">
                                        </div>
                                        <div class="col-md-6 reqleave-lbl">
                                            <span class="reqleave-p">To</span>
                                            <input type = "text" name="end-date" readonly placeholder="End Date" class="end-date datepicker"  id="end_date" >
                                        </div>
                                    </div>

                                    <div class="col-md-12">
                                        <textarea id="reason-leave-sbt" class="materialize-textarea" placeholder="Reason..." required></textarea>
                                    </div>
                                </div>
                            </div>
                            <a class="btn-floating btn-large waves-effect waves-light red" id="add-request-form" style = "float:right; margin-right: 10px;"><i class="material-icons">add</i></a>
                        </div>
                    </div>

                    <div class="chip sent">
                        sent!
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <a href="#!" class="waves-effect waves-light grey custombtn btn-flat close-modal-agenda" id = "btn-close">Close</a>
                <a class="waves-effect waves-light btn amber btn-submitleave" style="margin-right:5px;">Submit</a>
            </div>
        </div>
        <!-----------------------END OF MODAL -------------------------->
{% endblock %}

{% block customjs %}

    <script>

        var typeleave = '';
        $(document).ready(function(){
            var dateMeeting = new Pikaday({ field: document.getElementById('meeting_date')
            });
            //set current Date Today
            var dateToday = new Date();
            var fullYear = dateToday.getFullYear();
            var monthToday = dateToday.getMonth()+1;
            var dayToday = dateToday.getDate();
            if(dayToday<10) {
                dayToday='0'+dayToday;
            }
            if(monthToday<10) {
                monthToday = '0'+monthToday;
            }
            var appendDate = fullYear+"-"+monthToday+"-"+dayToday;
            $('.datepicker').val(appendDate);
            dateMeeting.setMinDate(new Date());
        });
        $('.close-modal-agenda').click(function(){
        });
        $('.btn-submitmeeting').click(function(){
            var reqmeetingTitle = $('#meeting-title').val();
            var reqmeetmessage =  $('#meeting').val();
            var tagged = [];
            var taggedemail = $('.select-emp-tag').select2("val");

            var meetingDate = $('#meeting_date').val(); //get the value of created datepicker
            var meeting_time_from = $('#time-from').val(); //get the value of time From
            var meeting_time_to = $('#time-to').val(); //get the value of time to


            var meeting_from = meetingDate + " " + meeting_time_from;
            var meeting_to   = meetingDate + " " + meeting_time_to;

            var meeting_from_unix = new Date(meeting_from).getTime();
            var meeting_to_unix = new Date(meeting_to).getTime();
            console.log(meeting_from_unix);
            console.log(meeting_to_unix);

            var from_meeting = meeting_from_unix;
            var to_meeting   = meeting_to_unix;

            if(reqmeetingTitle == ''){
                $('#meeting-title').css({'border-color' : 'red'});
                setTimeout(function(){
                    $('#meeting').css({'border-color': 'gray'})
                }, 1000);
                $('.required-field').show();
                return;
            }
            if(!taggedemail){
                $('.select-emp-tag').css({'border-color' : 'red'});
                setTimeout(function(){
                    $('#meeting').css({'border-color': 'gray'})
                }, 1000);
                $('.required-field').show();
                return;
            }
            if(reqmeetmessage == ''){
                $('#meeting').css({'border-color' : 'red'});
                setTimeout(function(){
                    $('#meeting').css({'border-color': 'gray'})
                }, 1000);
                $('.required-field').show();
                return;
            }
            if(!meeting_time_from){
                $('#time-from').css({'border-color' : 'red'});
                setTimeout(function(){
                    $('#meeting').css({'border-color': 'gray'})
                }, 1000);
                $('.required-field').show();
                return;
            }
            if(!meeting_time_to){
                $('#time-to').css({'border-color' : 'red'});
                setTimeout(function(){
                    $('#meeting').css({'border-color': 'gray'})
                }, 1000);
                $('.required-field').show();
                return;
            }
            if(from_meeting > to_meeting)
            {
                $('#time-from').css({'border-color' : 'red'});
                setTimeout(function(){
                    $('#meeting').css({'border-color': 'gray'})
                }, 1000);
                return;
            }
            $('.loader-notif').show();
            $('.loader-notif').css({'top' : '0px'});
            $('.btn-submitmeeting').hide();
            $.post("{{ path('request_meeting') }}",
                    {
                        meetingTitle:reqmeetingTitle,
                        reqmeetmessage:reqmeetmessage,
                        taggedemail:taggedemail,
                        meetingDate:meetingDate,
                        meetingTimeFrom:meeting_from,
                        meetingTimeTo:meeting_to
                    },
                    function(data){
                        console.log(data);
                        $('#meeting').val('');
                        $('.required-field').hide();
                        $('#daily_agenda').closeModal();
                        $('.request-meeting-notif').css({'top':'0px'});
                        setTimeout(function(){
                            $('.request-meeting-notif').css({'top' : '-55px'});
                        }, 5000);
                    }).always(function(data){
                console.log(data);
                $('.loader-notif').hide();
                $('.loader-notif').css({'top' : '-55px'});
                $('.btn-submitmeeting').show();
            });
        });
        $('.btn-ip-cancel').click(function(e){
            e.preventDefault();
            $('.diff-ip-container').hide();
        });
        $('.btn-ip-yes').click(function(e){
            e.preventDefault();
            $('.diff-ip-reason').show();
        });
        $('.modal-trigger').leanModal();
        function showBirthday() {
            var bdaynames = [];
            {% for names in userbdaynames %}
            bdaynames.push("{{ names }}");
            {% endfor %}
            console.log(bdaynames);
            if(bdaynames.length) {
                $('.modal-birthday-notify-container').show();
            }
            $('.btn-bdayclose').click( function() {
                $('.modal-birthday-notify-container').hide();
            });
        }


    </script>

    <script> // SCRIPT FOR MULTIPLE DATES REQUEST LEAVE
        var unique_id = 0;

        $(document).ready(function(){
            $("#add-request-form").click(function (){
                cloneRequestLeaveFields();
            });

            $("#btn-close").click(function() {
                removeClonedFields();
            });
        });

        function cloneRequestLeaveFields(){
            unique_id++;
            var form_container = document.createElement("div");                         // <div class = "multi_reqleaveform">
            form_container.className = "multi_reqleaveform newForm";

            var container = document.createElement("div");                              // <div class = "req_inner"> -> Container
            container.className = "req_inner";

            var from_cont = document.createElement("div");                              // <div class = "col-md-6..."> for FROM
            from_cont.className = "col-md-6 reqleave-lbl";

            var from_lbl = document.createElement("span").textContent = "From";         // <span> FROM </span> just label
            from_lbl.className = "reqleave-p";

            var from_input = document.createElement("input");                           // <input> start date
            from_input.setAttribute("name", "start-date" + unique_id);
            from_input.setAttribute("placeholder", "Start Date");
            from_input.setAttribute("id", "start_date" + unique_id);
            from_input.setAttribute("readonly", "true");
            from_input.setAttribute("required", "true");
            from_input.className = "start-date datepicker";

            var to_cont = document.createElement("div");                                // to container
            to_cont.className = "col-md-6 reqleave-lbl";

            var to_lbl = document.createElement("span").textContent = "To";             // To label (span class)
            to_lbl.className = "reqleave-p";

            var to_input = document.createElement("input");                             // <input> end date
            to_input.setAttribute("name", "end-date" + unique_id);
            to_input.setAttribute("placeholder", "End Date");
            to_input.setAttribute("id", "end_date" + unique_id);
            to_input.setAttribute("readonly", "true");
            to_input.setAttribute("required", "true");
            to_input.className = "end-date datepicker";

            var reason_cont = document.createElement("div");                            // <div class = "col-md-12"> for REASON
            reason_cont.className = "col-md-12";

            var reason = document.createElement("textarea");                            // <textarea> -> REASON
            reason.className = "materialize-textarea";
            reason.setAttribute("id", "reason-leave-sbt" + unique_id);
            reason.setAttribute("placeholder", "Reason...");
            reason.setAttribute("required", "true");

            form_container.append(container);
            form_container.append(reason_cont);
            reason_cont.append(reason);
            container.append(from_cont);
            from_cont.append(from_lbl);
            from_cont.append(from_input);
            container.append(to_cont);
            to_cont.append(to_lbl);
            to_cont.append(to_input);
            $(".form-container").append(form_container);
            pickDay(unique_id);
        }

        // request leave
        $('.btn-submitleave').click(function(){
            // validate first
            var validate = checkFields();
            if(validate == true) // true == there are errors
                return;
            // else continue

            $('.loader-notif').show();
            $('.loader-notif').css({'top' : '0px'});
            $('.btn-submitleave').hide();

            var obj = {};
            typeleave = 2;

            var leavestartdate  = $('#start_date').val();
            var leaveenddate    = $('#end_date').val();
            var reasonleave = $('#reason-leave-sbt').val();

            // push to array
            obj["start_date0"] = leavestartdate;
            obj["end_date0"] = leaveenddate;
            obj["reasonleave0"] = reasonleave;

            for (var i = 1; i <= unique_id; i++) {
                obj["start_date" + i] = $("#start_date" + i).val();
                obj["end_date" + i] = $("#end_date" + i).val();
                obj["reasonleave" + i] = $("#reason-leave-sbt" + i).val();
            }

            obj["unique_id"] = unique_id;

            $.post(
                "{{path('request_leave')}}",
                {
                    typeleave: typeleave,
                    obj: JSON.stringify(obj)
                },
                function(data){
                    console.log(data);
                    removeClonedFields();
                    $('.required-field').hide();
                    // $('.sent').show();
                    $('#daily_agenda').closeModal();
                    $('.request-leave-notif').css({'top':'0px'});
                    setTimeout(function(){
                        $('.request-leave-notif').css({'top' : '-55px'});
                    }, 5000);
                }, "json"
            ).always(function(data){
                $('.loader-notif').hide();
                $('.loader-notif').css({'top' : '-55px'});
                $('.btn-submitleave').show();
            });
        });

        function checkFields() {      // Checking if there are any inputs on the required fields
            var hasRequired = 0;
            var start_date, end_date, reason;

            for(var i = 0; i <= unique_id; i++) {
                if (i != 0){
                    start_date = $('#start_date' + i);
                    end_date = $('#end_date' + i);
                    reason = $('#reason-leave-sbt' +  i);
                } else {
                    start_date = $('#start_date');
                    end_date = $('#end_date');
                    reason = $('#reason-leave-sbt');
                }

                if(start_date.val() == '') {
                    start_date.css({'border-color': 'red'});
                    setTimeout(function(){
                        start_date.css({'border-color': 'gray'})
                    }, 1000);

                    hasRequired++;
                }

                if(end_date.val() == '') {
                    end_date.css({'border-color': 'red'});
                    setTimeout(function(){
                        end_date.css({'border-color': 'gray'})
                    }, 1000);

                    hasRequired++;
                }

                if(reason.val() == '') {
                    reason.css({'border-color': 'red'});
                    setTimeout(function(){
                        reason.css({'border-color': 'gray'})
                    }, 1000);

                    hasRequired++;
                }
            }

            if(hasRequired > 0)
                return true;
            else return false;
        }

        function removeClonedFields() {         // basically removes all the cloned fields
            $('#start_date').val('');
            $('#end_date').val('');
            $('#reason-leave-sbt').val('');
            $('.newForm').remove();
        }
    </script>

{% endblock %}